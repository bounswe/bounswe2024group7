version: '3.8'
services:
  postgres:
    image: postgres
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 20s
      retries: 10

  springboot-app:
    image: springboot
    build: ./backend/demo-group7
    volumes:
      - ./backend/demo-group7:/app
    container_name: springboot-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    env_file:
      - .env
    restart: on-failure

  frontend:
    build: ./frontend
    image: frontend
    container_name: frontend
    ports:
      - "${VITE_PORT}:${VITE_PORT}"
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - springboot-app
    env_file:
      - .env

  mobile: # TODO: Check whether "build" is under the correct directory. 
    build: ./mobile
    image: mobile
    container_name: mobile
    volumes:
      - ./mobile:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "8081:8081"
    environment:
      - NODE_ENV=development
    depends_on:
      - springboot-app
    env_file:
      - .env

volumes:
  postgres-data:
